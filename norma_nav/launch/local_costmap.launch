<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- 
  NOTE: You'll need to bring up something that publishes sensor data (see
  rosstage), something that publishes a map (see map_server), and something to
  visualize a costmap (see nav_view), to see things work.

  Also, on a real robot, you'd want to set the "use_sim_time" parameter to false, or just not set it.
  -->
  <param name="/use_sim_time" value="true"/>

  <!-- Publishes the voxel grid to rviz for display -->
  <node pkg="costmap_2d" type="costmap_2d_markers" name="costmap_visualizer">
    <remap from="costmap" to="costmap/costmap"/>
  </node>

  <!-- Run the costmap node -->
  <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node" >
    <rosparam file="$(find norma_nav)/param/local_costmap_params.yaml" command="load" ns="costmap" />
    <rosparam file="$(find norma_nav)/param/costmap_common_params.yaml" command="load" ns="costmap" />
  </node>

  <node name="collision_checker_node" pkg="norma_nav" type="collision_checker"></node>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find norma_nav)/rviz/collision_avoidance_config.rviz" />
</launch>
